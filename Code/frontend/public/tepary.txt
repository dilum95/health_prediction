import React from 'react'
import { BrowserRouter,Routes, Route, Outlet } from "react-router-dom";
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import './App.css';
import AddEdit from './pages/AddEdit';
import Home from './pages/Home';
import View from './pages/View';
import About from './pages/About';
import Header from './components/Header.js';
import '../node_modules/bootstrap/dist/css/bootstrap.min.css';


export default function App() {

  
  return (
    <BrowserRouter>
    <Header />
    <Routes>
      <Route path="/" index element={<Home/>} />
      <Route path="/add" element={<AddEdit />} />
      <Route path="/update/:id" element={<AddEdit />} />
      <Route path="/view/:id" element={<View/>} />
      <Route path="/about" element={<About />} />
    </Routes>
    </BrowserRouter>
  )
}




 // <nav className="navbar navbar-expand-lg navbar-light fixed-top">
        //   <div className="container">
        //     <Link className="navbar-brand" to={'/sign-in'}>
        //       positronX
        //     </Link>
        //     <div className="collapse navbar-collapse" id="navbarTogglerDemo02">
        //       <ul className="navbar-nav ml-auto">
        //         <li className="nav-item">
        //           <Link className="nav-link" to={'/sign-in'}>
        //             Login
        //           </Link>
        //         </li>
        //         <li className="nav-item">
        //           <Link className="nav-link" to={'/sign-up'}>
        //             Sign up
        //           </Link>
        //         </li>
        //       </ul>
        //     </div>
        //   </div>
        // </nav>


<table className="stuled-table" width="100%">
        <thead>
          <tr>
            <th style={{textAlign:"center"}}>Index</th>
            <th style={{textAlign:"center"}}>Name</th>
            <th style={{textAlign:"center"}}>Email</th>
            <th style={{textAlign:"center"}}>Phone</th>
            <th style={{textAlign:"center"}}>Actions</th>
          </tr>
        </thead>
        <tbody>
          {data &&
            data.map((item,index)=>{
              return(
                <tr key={index}>
                  <th scope="row">{index +1}</th>
                  <th >{item.name}</th>
                  <th >{item.email}</th>
                  <th >{item.phone}</th>
                  <th >
                    <Link to={`/update/${item.id}`}>
                      <button classNmae="btn bn-edit">Edit</button>
                    </Link>
                    <button classNmae="btn bn-edit" onClick={()=>onDeleteUser(item.id)}>Delete</button>
                    <Link to={`/view/${item.id}`}>
                      <button classNmae="btn bn-edit">View</button>
                    </Link>
                  </th>
                </tr>
                )
            })

          }
        </tbody>
      </table>


      <form onSubmit={ this.onFormSubmit }>
                  <div className="mb-3">
                    <label>symptom1</label>
                    <input type="text" className="form-control" placeholder="symptom1"  name="symptom1" />
                    <label>symptom1</label>
                    <input type="text" className="form-control" placeholder="symptom1"  name="symptom1" />
                  </div>
               </form>        


// {data &&
      //       data.map((item,index)=>{
      //         return(
            //       <div class="card" key={index}>
            //        <div class="container">
            //          <h4 scope="row"><b>{index +1}.{item.prediction}</b></h4>
            //          <p>{item.date}</p>
            //        </div>
            //      </div>
            //      )
      //       })

      // }                     


import pandas as pd
import pickle

with open('model_symptom-bad','rb') as file:
  mp = pickle.load(file)
X_test_new = [1,4,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0]    
data=pd.DataFrame(X_test_new).transpose()
print(data)
pre=mp.predict(data)
print(pre)


<div class="column">
                        <div class="flip-card">
                          <div class="flip-card-inner">
                            <div class="flip-card-front">
                              <img src={item.image} alt="Avatar" className="carImage"/>
                            </div>
                            <div class="flip-card-back" className="carImage">
                              <h1>{item.name}</h1> 
                              <p>{item.email}</p> 
                              <p>{item.mobile}</p>
                              <button className="btn btn-danger paddingbtn" onClick={()=>onDeleteUser(item._id)}>Delete</button>
                              <Link to={`/history/${item._id}`}>
                               <button className="btn btn-primary">View</button>
                              </Link>
                            </div>
                          </div>
                        </div>
                      </div>







                      <table className="stuled-table" width="100%">
                <thead>
                  <tr>
                    <th style={{textAlign:"center"}}></th>
                  </tr>
                </thead>
                <tbody>
                  {data &&
                    data.map((item,index)=>{
                      return(
                        <tr key={index}>
                          <td>
                          <div class="card">
                    <div class="container">
                    <div className="row">
                      <div className="columnHomeView">
                        <h4><b>{item.condition}</b></h4> 
                        <p>{item.doctor}</p> 
                        <p>{item.note}</p>
                        <p>From   :{item.from}</p> 
                        <p>Untill :{item.untill}</p>
                      </div>
                      <div className="columnHomeAdd">
                        <img className="imgPresciption zoom" src={item.file} alt="Red dot" />
                        </div>                      
                    </div>
                       
                    </div>
                   </div>
                   </td>  
                        </tr>
                        )
                    })
                  }
                </tbody>
              </table>

              <DataTable
                  columns={columns}
                  data={filteredData}
                  pagination
                  fixedHeader
                  fixedHeaderScrollGeight="500px"
                  subHeader
                  subHeaderComponent={
                    <input
                     type=""
                     placeholder="Search Here"
                     value={search}
                     onChange={(e)=>setsearch(e.target.value)} 
                    />
                  }
              />